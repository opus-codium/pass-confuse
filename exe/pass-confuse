#!/usr/bin/env ruby

def exit_with_usage
  puts <<~USAGE
    Usage: #{$PROGRAM_NAME} FILE

    Convert a regular file into a `confused` one.

    The `confusing` process means:
      - Moving the file content into `pass`
      - Symlink the file path to the `confused` area (ie. `~/.confuse`)
    Any subsequent file path access will trig an access to `pass` using your regular way (e.g. gpg-agent's pin entry)
  USAGE
  exit 1
end

exit_with_usage if ARGV.empty?

filename = ARGV.shift

raise "'#{filename}' does not exist!" unless File.exist? filename

raise "'#{filename}' must be a file!" unless File.file? filename

raise "'#{filename}' must be a regular file! (Already confused file?)" if File.symlink? filename

def relative_path_from_home(filename)
  filename = File.expand_path(filename)
  home = File.expand_path '~'
  require 'pathname'
  Pathname.new(filename).relative_path_from(home).to_s
end

@confuse_mountpoint = File.expand_path('~/.confuse')
confused_path = relative_path_from_home(filename).gsub '..', '__' # Allow confused files from outside of user's home
confused_path = File.join @confuse_mountpoint, confused_path

require 'fileutils'
FileUtils.mkdir_p File.dirname(confused_path)
FileUtils.cp filename, confused_path
FileUtils.ln_sf confused_path, filename
